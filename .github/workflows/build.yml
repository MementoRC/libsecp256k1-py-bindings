name: build

on:
  push:
    tags:
    - v*
    branches:
    - main
  pull_request:
    branches:
    - main

concurrency:
  group: build-${{ github.head_ref }}
  cancel-in-progress: true

env:
  CIBW_BEFORE_ALL: conda install -c conda-forge pkgconfig libsecp256k1=0.4.1=hd590300_0
  CIBW_TEST_REQUIRES: pytest pytest-benchmark
  CIBW_TEST_COMMAND: >
      conda install -c conda-forge libsecp256k1==0.4.1=hd590300_0 &&
      pytest {project}
  CIBW_TEST_SKIP: "*-macosx_arm64"
  CIBW_SKIP: >
      pp*

jobs:
  test:
    name: Test latest Python
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: '3.12'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Upgrade Python packaging tools
      run: pip install --upgrade pip setuptools wheel

    - name: Show runner information
      run: |
        python --version
        pip --version

    - name: Install dependencies
      run: ./.github/scripts/install-test-deps.sh

    - name: Check style and typing
      run: tox -e lint,typing

  test-with-libsecp256k1:
    name: Test Conda libsecp256k1
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: '3.12'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: test-conda
        environment-file: environment.yml
        python-version: ${{ env.PYTHON_VERSION }}
        auto-activate-base: false

    - name: Run tests
      shell: pwsh
      run: tox -e ${{ env.PYTHON_VERSION }}

    - name: Run benchmarks
      shell: pwsh
      run: tox -e bench

  windows-wheels-standard:
    name: Build Windows wheels
    needs:
    - test
    - test-with-libsecp256k1
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Miniconda
      uses: conda-incubator/setup-miniconda@v3

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.5
      env:
        # conda-forge does not support win32 nor ARM64 for libsecp256k1
        CIBW_ARCHS_WINDOWS: "AMD64"

    - uses: actions/upload-artifact@v4
      with:
        name: artifacts-windows
        path: wheelhouse/*.whl
        if-no-files-found: error

  macos-wheels-x86_64:
    name: Build macOS wheels for x86-64
    needs:
    - test
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Miniconda
      uses: conda-incubator/setup-miniconda@v3

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.5
      env:
        CIBW_ARCHS_MACOS: AMD64

    - uses: actions/upload-artifact@v4
      with:
        name: artifacts-macos-x86_64
        path: wheelhouse/*.whl
        if-no-files-found: error

# Conda-Forge does not have libsecp256k1 for OSX-ARM64
#  macos-wheels-arm-beta:
#    name: Build macOS wheels for ARM (Native
#    needs:
#    - test
#    runs-on: macos-14
#
#    steps:
#    - uses: actions/checkout@v4
#    - uses: actions/setup-python@v5
#
#    - name: Install Miniconda
#      uses: conda-incubator/setup-miniconda@v3
#      with:
#        miniconda-version: "latest"
#        architecture: "arm64"
#
#    - name: Build wheels
#      uses: pypa/cibuildwheel@v2.16.5
#      env:
#        CIBW_ARCHS_MACOS: arm64
#        CIBW_BEFORE_ALL_MACOS: conda install -c conda-forge pkgconfig libsecp256k1
#        CIBW_TEST_REQUIRES: pytest pytest-benchmark
#        CIBW_TEST_COMMAND: >
#          conda install -c conda-forge libsecp256k1 tox &&
#          python -c
#          "from libsecp256k1_py_bindings import PrivateKey;
#          a=PrivateKey();
#          b=PrivateKey();
#          " &&
#          python -m tox -e ${{ env.PYTHON_VERSION }}
#
#    - uses: actions/upload-artifact@v4
#      with:
#        name: artifacts-macos-arm-native
#        path: wheelhouse/*.whl
#        if-no-files-found: error
